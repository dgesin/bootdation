// converts px to rems for font size only
.font-size(@value) {
  @pxValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])+'px'}()`;
  @remValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])/10+'rem'}()`;
  font-size: ~"@{pxValue}"; 
  font-size: ~"@{remValue}";
}

// potential????
.margin(@value) {
  @pxValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])+'px'}()`;
  @remValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])/10+'rem'}()`;
  margin: ~"@{pxValue}"; 
  margin: ~"@{remValue}";
}
.padding(@value) {
  @pxValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])+'px'}()`;
  @remValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])/10+'rem'}()`;
  padding: ~"@{pxValue}"; 
  padding: ~"@{remValue}";
}
.width(@value) {
  @pxValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])+'px'}()`;
  @remValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])/10+'rem'}()`;
  width: ~"@{pxValue}"; 
  width: ~"@{remValue}";
}
.height(@value) {
  @pxValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])+'px'}()`;
  @remValue: ~`function(){var a='@{value}'.split("px");return parseInt(a[0])/10+'rem'}()`;
  height: ~"@{pxValue}"; 
  height: ~"@{remValue}";
}

// converts px to rems for other measurements (could just as easily make this font-size)
// make this to do multiple units like .rem('margin',0 0 12px 24px);
.rem(@property, @value) {
  x-prop:~`(function(){var a='@{value}'.split("px"),p=@{property},v=parseInt(a[0])/10;return 'prop;\n  '+p+': '+a[0]+'px;\n  '+p+': '+v+'rem'})()`;
}

.property(@property, @value, @prefixes: '', @base: true) {
  -less-property: ~`(function(){var a=@{prefixes}.split(/\s+/),r=' property',i=0;@{base}&&@{prefixes}&&a.push('');for(;i<a.length;++i)b=a[i],r+=';\n  '+(b?'-'+b+'-':b)+'@{property}: '+'@{value}';return r})()`;
}




// Alert mixin -- experimental!!!!
.alert(@size:1, @bg:@alertBg, @color:@alertText, @radius:@alertBorderRadius, @borderWidth: 1px) {
  padding: (@paddingVertical * @size) ((@paddingHorizontal * 3) * @size) (@paddingVertical * @size) (@paddingHorizontal * @size);
  margin-bottom: @lineHeightPx * @size;
  color: @color;
  background-color: @bg;
  border: @borderWidth solid darken(@bg, 10%);
  border-radius: @radius;
  .font-size(@size * @fontSize);
  // Headings for larger alerts
  h4 {
    margin-top: 0;
    // Specified for the h4 to prevent conflicts of changing @headingsColor
    color: inherit;
  }
  // Match the hr to the border of the alert
  hr {
    border-top-color: darken(@bg, 10%);
  }
  // Provide class for links that match alerts
  .alert-link {
    font-weight: 500;
    color: @color;
  }

  // Adjust close link position
  .close {
    position: absolute;
    top:0;
    right: (@paddingHorizontal * @size);
    .font-size(@size * (@fontSize * 1.5));
    color: inherit;
    line-height: inherit;
  }
}

// Panel mixin -- experimental!!!!
.panel(@size:1, @bg:@panelBg, @radius:@panelBorderRadius, @bdrColor:@panelBorder, @headColor: panelHeadingBg, @footerBg: @panelFooterBg) {
  padding: 15px * @size;
  margin-bottom: 20px;
  background-color: @bg;
  border: 1px solid @bdrColor;
  border-radius: @radius * @size;
  box-shadow: 0 1px 1px rgba(0,0,0,.05);
  .panel-heading {
    margin: -(15px * @size) -(15px * @size) (15px * @size);
    padding: (10px * @size) (15px * @size);
    font-size: ((@fontSize * 1.25) * @size);
    font-weight: 500;
    background-color: @headColor;
    border-bottom: 1px solid @bdrColor;
    border-top-left-radius:  ((@radius * @size) - 1);
    border-top-right-radius: ((@radius * @size) - 1);
  }
  .panel-footer {
    margin: (15px * @size) -(15px * @size) -(15px * @size);
    padding: (10px * @size) (15px * @size);
    background-color: @footerBg;
    border-top: 1px solid @bdrColor;
    border-bottom-left-radius:  ((@radius * @size) - 1);
    border-bottom-right-radius: ((@radius * @size) - 1);
  }
}

// Well mixin -- experimental!!!!
/*.well(@size:1, @bg:@wellBg, @radius:@borderRadius, @bdrColor:darken(@wellBg, 7%), @bdrWidth: 1px) {
  min-height: @lineHeightPx * @size;
  padding: (@lineHeightPx - 2) * @size;
  margin-bottom: @lineHeightPx;
  background-color: @bg;
  border: @bdrWidth solid @bdrColor;
  border-radius: @radius;
  box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
  .font-size(@fontSize * @size);
  blockquote {
    border-color: @bdrColor;
  }
}*/

/*.test(@a:1; @b:2) {
	width: @a;
	height: @b;
}*/

//.test(@b:3; @a:2);

/*.example {
	.well(1.5, 45px);
}
*/